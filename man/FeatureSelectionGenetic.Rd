% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FeatureSelectionGenetic.R
\name{FeatureSelectionGenetic}
\alias{FeatureSelectionGenetic}
\title{FeatureSelectionGenetic}
\description{
FeatureSelection child class to conduct genetic search. The comma strategy \code{(mu, lambda)} selects a new population of size \code{mu} out of the \code{lambda > mu} offspring. The plus strategy \code{(mu + lambda)} uses the joint pool of \code{mu} parents and \code{lambda} offspring for selecting \code{mu} new candidates. Out of those \code{mu} features, the new \code{lambda} features are generated by randomly choosing pairs of parents. These are crossed over and \code{crossover_rate} represents the probability of choosing a feature from the first parent instead of the second parent. The resulting offspring is mutated, i.e., its bits are flipped with probability \code{mutation_rate}. If \code{max_features} is set, offspring are repeatedly generated until the setting is satisfied.
}
\section{Usage}{
\preformatted{fs = FeatureSelectionGenetic$new()
}

See \link{FeatureSelection} for a description of the interface.
}

\section{Arguments}{

\itemize{
\item \code{pe} (\code{[PerformanceEvaluator]}).
\item \code{tm} (\code{[Terminator]}).
\item \code{mu} (\code{integer(1)}
Size of the parent population.
\item \code{lambda} (\code{integer(1)})
Size of the children population.
\item \code{crossover_rate} (\code{numeric(1)})
Probability of choosing a bit from the first parent within the crossover mutation.
\item \code{mutation_rate} (\code{numeric(1)})
Probability of flipping a feature bit, i.e. switch between selecting / deselecting a feature.
\item \code{max_features} (\code{integer(1)})
Maximum number of features.
\item \code{strategy} (\code{character(1)})
\code{plus} or \code{comma}. Indicates whether to use a (mu, lambda) or (mu + lambda) genetic algorithm.
}
}

\section{Details}{

\code{$new()} creates a new object of class \link{FeatureSelectionGenetic}.
\code{$get_result()} Returns best feature combination with performance.
\code{$get_path()} Returns each generation (\code{mu} feature sets and performanes) as a list entry.
The interface is described in \link{FeatureSelection}.
}

\examples{
task = mlr3::mlr_tasks$get("pima")
measures = mlr3::mlr_measures$mget(c("classif.acc"))
task$measures = measures
learner = mlr3::mlr_learners$get("classif.rpart")
resampling = mlr3::mlr_resamplings$get("cv", param_vals = list(folds = 5L))
pe = PerformanceEvaluator$new(task = task, learner = learner, resampling = resampling)
tm = TerminatorRuntime$new(max_time = 20, units = "secs")
fs = FeatureSelectionGenetic$new(pe = pe, tm = tm, mu = 10, lambda = 20, strategy = "plus")
fs$calculate()
fs$get_result()
fs$get_path()
}
\seealso{
Other FeatureSelection: \code{\link{FeatureSelectionExhaustive}},
  \code{\link{FeatureSelectionRandom}},
  \code{\link{FeatureSelectionSequential}},
  \code{\link{FeatureSelection}}
}
\concept{FeatureSelection}
