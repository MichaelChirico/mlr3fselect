% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FSelectRFE.R
\name{FSelectRFE}
\alias{FSelectRFE}
\title{FSelectRFE Class}
\description{
Class for feature selection by recursive feature elimination (RFE). The
recursive algorithm (\code{recursive = TRUE}) recomputes the feature importances
on the reduced feature set in every iteration.  The non-recursive algorithm
(\code{recursive = FALSE}) only uses the feature importances of the model fitted
with all features to eliminate the next most unimportant feature in every
iteration.
}
\section{Parameters}{

\describe{
\item{\code{min_features}}{\code{integer(1)}
Minimum number of features. By default, 1.}
\item{\code{recursive}}{\code{logical(1)}}
}
}

\examples{
library(mlr3)

terminator = term("evals", n_evals = 10)
instance = FSelectInstance$new(
  task = tsk("iris"),
  learner = lrn("classif.rpart"),
  resampling = rsmp("holdout"),
  measures = msr("classif.ce"),
  terminator = terminator
)

fs = fs("rfe")
fs$select(instance)
instance$result
instance$evaluator$archive$data
}
\section{Super classes}{
\code{\link[bbotk:Optimizer]{bbotk::Optimizer}} -> \code{\link[mlr3fselect:FSelect]{mlr3fselect::FSelect}} -> \code{FSelectRFE}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{importance}}{Stores the feature importance of the model with all
variables if \code{recrusive} is set to \code{FALSE}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FSelectRFE$new()}}
\item \href{#method-clone}{\code{FSelectRFE$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Optimizer" data-id="optimize">}\href{../../bbotk/html/Optimizer.html#method-optimize}{\code{bbotk::Optimizer$optimize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3fselect" data-topic="FSelect" data-id="format">}\href{../../mlr3fselect/html/FSelect.html#method-format}{\code{mlr3fselect::FSelect$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3fselect" data-topic="FSelect" data-id="print">}\href{../../mlr3fselect/html/FSelect.html#method-print}{\code{mlr3fselect::FSelect$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3fselect" data-topic="FSelect" data-id="select">}\href{../../mlr3fselect/html/FSelect.html#method-select}{\code{mlr3fselect::FSelect$select()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create new \code{FSelectRFE} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FSelectRFE$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{FSelectRFE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FSelectRFE$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
